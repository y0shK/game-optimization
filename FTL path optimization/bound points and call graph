# assign random locations in space to use for path optimization
for i in range(0,10):
    xLoc.append(random.randint(0, upperBound))
    yLoc.append(random.randint(0,upperBound))

for i in range(len(xLoc)):
    # base case
    pointBounds(xLoc, upperBound, iterator, 0, 1)
    pointBounds(yLoc, upperBound, iterator, 0, 1)

    # induction
    pointBounds(xLoc, upperBound, iterator, 0, 1)
    pointBounds(yLoc, upperBound, iterator, i, i-1)

xLoc.sort() # sort x-coordinates so no backwards motion occurs, all vertical motion okay
print("X-coordinates: %s" % xLoc)
print("Y-coordinates: %s" % yLoc)

graph(xLoc, yLoc)
